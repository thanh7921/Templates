@manual{spec:riscv-isa-unpriv,
    title = "{The RISC-V Instruction Set Manual, Volume I: User-Level ISA}",
    author = "{RISC-V Foundation}",
    organization = "RISC-V Foundation",
    edition = "Document Version 20191214-draft",
    year = "2019",
    month = "12",
}

@manual{spec:riscv-isa-priv,
    title = "{The RISC-V Instruction Set Manual, Volume II: Privileged
             Architecture}",
    author = "{RISC-V Foundation}",
    organization = "RISC-V Foundation",
    edition = "Document Version 20211203",
    year = "2021",
    month = "12",
}

@techreport{report:isa-should-be-free,
    Author = {Asanović, Krste and Patterson, David A.},
    Title = "{Instruction Sets Should Be Free: The Case For RISC-V}",
    Year = {2014},
    Month = {Aug},
    Url = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2014/EECS-2014-146.html},
    Number = {UCB/EECS-2014-146},
    Abstract = {The increasing popularity of systems on a chip, where processors
                are just a small fraction of the design, calls into question why
                one of the most important interfaces is proprietary. We argue
                that: one, there is no good technical reason not to have free,
                open instruction sets just as we have free, open networking
                standards and free, open operating systems; two, the most likely
                first targets for a free, open instruction set are systems on a
                chip for the Internet of Things, which have low cost and power
                demands, and for Warehouse Scale Computers, which could benefit
                from viable alternatives to the 80x86 instruction set; three, the
                best architectural style for a free, open instruction set is
                RISC; four, given the time it takes to design an instruction set,
                it makes more sense to adopt an existing RISC free, open
                instruction set than to design a new one from scratch; five,
                among the existing RISC free, open instruction sets, RISC-V is
                the best and safest choice.},
}

@inproceedings{paper:survey-application-class-riscv,
    author = {D\"{o}rflinger, Alexander and Albers, Mark and Kleinbeck, Benedikt
              and Guan, Yejun and Michalik, Harald and Klink, Raphael and
              Blochwitz, Christopher and Nechi, Anouar and Berekovic, Mladen},
    title = "{A comparative survey of open-source application-class RISC-V
             processor implementations}",
    year = {2021},
    isbn = {9781450384049},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3457388.3458657},
    doi = {10.1145/3457388.3458657},
    abstract = {The numerous emerging implementations of RISC-V processors and
                frameworks underline the success of this Instruction Set
                Architecture (ISA) specification. The free and open source
                character of many implementations facilitates their adoption in
                academic and commercial projects. As yet it is not easy to say
                which implementation fits best for a system with given
                requirements such as processing performance or power consumption.
                With varying backgrounds and histories, the developed RISC-V
                processors are very different from each other. Comparisons are
                difficult, because results are reported for arbitrary
                technologies and configuration settings. Scaling factors are used
                to draw comparisons, but this gives only rough estimates. In
                order to give more substantiated results, this paper compares the
                most prominent open-source application-class RISC-V projects by
                running identical benchmarks on identical platforms with defined
                configuration settings. The Rocket, BOOM, CVA6, and SHAKTI
                C-Class implementations are evaluated for processing performance,
                area and resource utilization, power consumption as well as
                efficiency. Results are presented for the Xilinx Virtex
                UltraScale+ family and GlobalFoundries 22FDX ASIC technology.},
    booktitle = {Proceedings of the 18th ACM International Conference on
                 Computing Frontiers},
    pages = {12–20},
    numpages = {9},
    keywords = {virtex UltraScale+, open-source, energy efficiency, benchmarks,
                application-class, RISC-V, GlobalFoundries 22FDX, FPGA, ASIC},
    location = {Virtual Event, Italy},
    series = {CF '21},
}

@article{paper:riscv-ext-survey,
    author = {Cui, Enfang and Li, Tianzheng and Wei, Qian},
    journal = {IEEE Access},
    title = "{RISC-V Instruction Set Architecture Extensions: A Survey}",
    year = {2023},
    volume = {11},
    number = {},
    pages = {24696-24711},
    keywords = {Instruction sets;Microprocessors;Computer architecture;Task
                analysis;Graphics processing units;Cloud computing;Artificial
                intelligence;RISC-V;instruction set
                architecture;extensions;survey},
    doi = {10.1109/ACCESS.2023.3246491},
}

@article{paper:riscv-dsp,
    author = {Gautschi, Michael and Schiavone, Pasquale Davide and Traber,
              Andreas and Loi, Igor and Pullini, Antonio and Rossi, Davide and
              Flamand, Eric and Gürkaynak, Frank K. and Benini, Luca},
    journal = {IEEE Transactions on Very Large Scale Integration (VLSI) Systems},
    title = "{Near-Threshold RISC-V Core With DSP Extensions for Scalable IoT
             Endpoint Devices}",
    year = {2017},
    volume = {25},
    number = {10},
    pages = {2700-2713},
    keywords = {Multicore processing;Hardware;Process control;Feature
                extraction;Standards;Performance evaluation;Instruction set
                architecture (ISA)
                extensions;Internet-of-Things;multicore;RISC-V;ultralow power
                (ULP)},
    doi = {10.1109/TVLSI.2017.2654506},
}

@inproceedings{paper:riscv-cnn,
    author = {Porter, Ross and Morgan, Sam and Biglari-Abhari, Morteza},
    booktitle = {2019 International Conference on Computational Science and
                 Computational Intelligence (CSCI)},
    title = "{Extending a Soft-Core RISC-V Processor to Accelerate CNN Inference
             }",
    year = {2019},
    volume = {},
    number = {},
    pages = {694-697},
    keywords = {Registers;Hardware;Optimization;Kernel;Benchmark testing;Field
                programmable gate arrays;Acceleration;RISC-V, CNN, Soft-core
                processor},
    doi = {10.1109/CSCI49370.2019.00130},
}

@misc{paper:lu2021surveyriscvsecurityhardware,
    title = "{A Survey on RISC-V Security: Hardware and Architecture}",
    author = {Tao Lu},
    year = {2021},
    eprint = {2107.04175},
    archivePrefix = {arXiv},
    primaryClass = {cs.CR},
    url = {https://arxiv.org/abs/2107.04175},
}

@article{paper:energy-performance-tradeoff,
    author = {Azizi, Omid and Mahesri, Aqeel and Lee, Benjamin C. and Patel,
              Sanjay J. and Horowitz, Mark},
    title = {Energy-performance tradeoffs in processor architecture and circuit
             design: a marginal cost analysis},
    year = {2010},
    issue_date = {June 2010},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {38},
    number = {3},
    issn = {0163-5964},
    url = {https://doi.org/10.1145/1816038.1815967},
    doi = {10.1145/1816038.1815967},
    abstract = {Power consumption has become a major constraint in the design of
                processors today. To optimize a processor for energy-efficiency
                requires an examination of energy-performance trade-offs in all
                aspects of the processor design space, including both
                architectural and circuit design choices. In this paper, we apply
                an integrated architecture-circuit optimization framework to map
                out energy-performance trade-offs of several different high-level
                processor architectures. We show how the joint
                architecture-circuit space provides a trade-off range of
                approximately 6.5x in performance for 4x energy, and we identify
                the optimal architectures for different design objectives. We
                then show that many of the designs in this space come at very
                high marginal costs. Our results show that, for a large range of
                design objectives, voltage scaling is effective in efficiently
                trading off performance and energy, and that the choice of
                optimal architecture and circuits does not change much during
                voltage scaling. Finally, we show that with only two designs--a
                dual-issue in-order design and a dual-issue out-of-order design,
                both properly optimized-a large part of the energy-performance
                trade-off space can be covered within 3\% of the optimal
                energy-efficiency.},
    journal = {SIGARCH Comput. Archit. News},
    month = jun,
    pages = {26–36},
    numpages = {11},
    keywords = {co-optimization, design space exploration, design trade-offs,
                energy efficiency, microarchitecture, optimization},
}

@inproceedings{paper:design-tradeoff,
    author = {Bordoloi, Unmesh D. and Huynh, Huynh Phung and Chakraborty,
              Samarjit and Mitra, Tulika},
    title = {Evaluating design trade-offs in customizable processors},
    year = {2009},
    isbn = {9781605584973},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1629911.1629978},
    doi = {10.1145/1629911.1629978},
    abstract = {The short time-to-market window for embedded systems demands
                automation of design methodologies for customizable processors.
                Recent research advances in this direction have mostly focused on
                single criteria optimization, e.g., optimizing performance though
                custom instructions under pre-defined area constraint. From the
                designer's perspective, however, it would be more interesting if
                the conflicting trade-offs among multiple objectives (e.g.,
                performance versus area) are exposed enabling an informed
                decision making. Unfortunately, identifying the optimal trade-off
                points turns out to be computationally intractable. In this paper
                , we present a polynomial-time approximation algorithm to
                systematically evaluate the design trade-offs. In particular, we
                explore performance-area trade-offs in the context of
                multitasking real-time embedded applications to be implemented on
                a customizable processor.},
    booktitle = {Proceedings of the 46th Annual Design Automation Conference},
    pages = {244–249},
    numpages = {6},
    keywords = {ASIP, multi-objective design space exploration, pareto-optimal
                curve, processor customization},
    location = {San Francisco, California},
    series = {DAC '09},
}

@article{paper:iot-processor-assessment,
    title = {A processor for IoT applications: An assessment of design space and
             trade-offs},
    journal = {Microprocessors and Microsystems},
    volume = {42},
    pages = {156-164},
    year = {2016},
    issn = {0141-9331},
    doi = {https://doi.org/10.1016/j.micpro.2016.02.002},
    url = {https://www.sciencedirect.com/science/article/pii/S0141933116000338},
    author = {Sergio F. Johann and Matheus T. Moreira and Leandro S. Heck and
              Ney L.V. Calazans and Fabiano P. Hessel},
    keywords = {Configurable processor cores, Low power, ASIP, Design space
                exploration, IoT},
    abstract = {Contemporary embedded systems require low-power solutions while
                still keeping a minimum performance level, and this is even more
                acute in the Internet of Things (IoT) domain, with its vast
                design space. This work proposes a configurable RISC processor
                associated to a design flow that includes a hardware synthesis
                flow and a software toolchain. This design flow is useful to
                explore design space and trade-offs of processor cores for IoT
                applications, by enabling multiple hardware configurations with
                variable degrees of complexity, while maintaining compatibility
                with the chosen instruction set architecture, which is itself
                configurable. Results rely on example designs targeting a 65 nm
                technology and post-mapped hardware simulations of two benchmarks
                sets, the CoreMark and Mälardalen suites. These results indicate
                that substantial power savings can be obtained by tailoring the
                architecture to a given application class, while reducing
                hardware complexity and maintaining performance figures. Findings
                show that the proposed processor provides an interesting resource
                to target low-end and middle-sized IoT applications, while
                demonstrating that reducing hardware complexity usually leads to
                the best trade-off between performance and power.},
}


@book{book:the-zynq-book,
    author = {Crockett, Louise H. and Elliot, Ross A. and Enderwitz, Martin A.
              and Stewart, Robert W.},
    title = {{The Zynq Book: Embedded Processing with the Arm Cortex-A9 on the
             Xilinx Zynq-7000 All Programmable Soc}},
    year = {2014},
    isbn = {099297870X},
    publisher = {Strathclyde Academic Media},
    address = {Glasgow, GBR},
    abstract = {This book is about the Zynq-7000 All Programmable System on Chip
                , the family of devices from Xilinx that combines an
                application-grade ARM Cortex-A9 processor with traditional FPGA
                logic fabric. Catering for both new and experienced readers, it
                covers fundamental issues in an accessible way, starting with a
                clear overview of the device architecture, and an introduction to
                the design tools and processes for developing a Zynq SoC. Later
                chapters progress to more advanced topics such as embedded
                systems development, IP block design and operating systems.
                Maintaining a 'real-world' perspective, the book also compares
                Zynq with other device alternatives, and considers end-user
                applications. The Zynq Book is accompanied by a set of practical
                tutorials hosted on a companion website. These tutorials will
                guide the reader through first steps with Zynq, following on to a
                complete, audio-based embedded systems design.},
}

@book{book:comparch-riscv,
    author = {Patterson, David A. and Hennessy, John L.},
    title = {{Computer Organization and Design RISC-V Edition: The Hardware
             Software Interface}},
    year = {2017},
    isbn = {0128122757},
    publisher = {Morgan Kaufmann Publishers Inc.},
    address = {San Francisco, CA, USA},
    edition = {1st},
    abstract = {The new RISC-V Edition of Computer Organization and Design
                features the RISC-V open source instruction set architecture, the
                first open source architecture designed to be used in modern
                computing environments such as cloud computing, mobile devices,
                and other embedded systems. With the post-PC era now upon us,
                Computer Organization and Design moves forward to explore this
                generational change with examples, exercises, and material
                highlighting the emergence of mobile computing and the Cloud.
                Updated content featuring tablet computers, Cloud infrastructure,
                and the x86 (cloud computing) and ARM (mobile computing devices)
                architectures is included. An online companion Web site provides
                advanced content for further study, appendices, glossary,
                references, and recommended reading. Features RISC-V, the first
                such architecture designed to be used in modern computing
                environments, such as cloud computing, mobile devices, and other
                embedded systems Includes relevant examples, exercises, and
                material highlighting the emergence of mobile computing and the
                cloud},
}

@techreport{report:rocket-chip-generator,
    author = "Krste Asanović, Rimas Avižienis, Jonathan Bachrach, Scott Beamer,
              David Biancolin, Christopher Celio, Henry Cook, Palmer Dabbelt,
              John Hauser, Adam Izraelevitz, Sagar Karandikar, Benjamin Keller,
              Donggyu Kim, John Koenig, Yunsup Lee, Eric Love, Martin Maas,
              Albert Magyar, Howard Mao, Miquel Moreto, Albert Ou, David
              Patterson, Brian Richards, Colin Schmidt, Stephen Twigg, Huy Vo,
              and Andrew Waterman",
    title = "{The Rocket Chip Generator}",
    institution = "University of California, Berkeley",
    year = "2016",
    month = "4",
    note = "Technical Report UCB/EECS-2016-17",
}
